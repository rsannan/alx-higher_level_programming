==============================
How to Use 4-print_square.py
==============================

This module defines a print square function ``print_square(size)``.

Using ``print_square``
--------------------
Squares are printed using the ``#`` character. ``size`` represents 
the length and breath of the square.

>>> print_square = __import__('4-print_square').print_square
>>> print_square(1)
#

>>> print_square(10)
##########
##########
##########
##########
##########
##########
##########
##########
##########
##########

when ``size`` is zero nothing is printed

Error Conditions
----------------

``size`` must be an integer. Otherwise, a TypeError is raised.

>>> print_square("rabbit")
Traceback (most recent call last):
TypeError: size must be an integer

>>> print_square(3.9)
Traceback (most recent call last):
TypeError: size must be an integer

``size`` must be greater than zero otherwise a ValueError is raised.

>>> print_square(-2)
Traceback (most recent call last):
ValueError: size must be >= 0

Note that type-checking occurs before value-checking.

>>> print_square(-2.5)
Traceback (most recent call last):
TypeError: size must be an integer

At least one argument must be provided.

>>> print_square()
Traceback (most recent call last):
TypeError: print_square() missing 1 required positional argument: 'size'
