==============================
How to Use 5-text_indentation.py
==============================

This module defines a print square function ``text_indentation(text)``.

Using ``text_indentation``
--------------------
Text is printed with two new lines after each of the characters ``.``, ``?``,
and ``:``


>>> text_indentation = __import__('5-text_indentation').text_indentation
>>> text_indentation("Hello?")
Hello?
<BLANKLINE>

No spaces are printed at the beginning of a line and 
no spaces are printed at the end of each printed line.

>>> text_indentation("   Well hello there.")
Well hello there.
<BLANKLINE>

>>> text_indentation("Hello.   ")
Hello.
<BLANKLINE>

New lines are only printed for the characters ``.``, ``?``, and ``:`` -
text not ending with one of these characters is not ended with a new line.

>>> text_indentation("The cow jump, yes over the moon")
The cow jump, yes over the moon

New lines within a string are printed as normal

 >>> text_indentation("Let's print a new-line! Here goes:\nPrinted.")
 Let's print a new-line! Here goes:
 <BLANKLINE>
 <BLANKLINE>
 Printed.
 <BLANKLINE>

>>> text_indentation("A sneaky \n new line.")
A sneaky 
new line.
<BLANKLINE>

Error Conditions
----------------

The paramter ``text`` must be a string. Otherwise, a TypeError is raised.

>>> text_indentation(7)
Traceback (most recent call last):
TypeError: text must be a string

>>> text_indentation(None)
Traceback (most recent call last):
TypeError: text must be a string
